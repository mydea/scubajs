/*! 
 * scuba.js 
 * 
 * author: Francesco Novy 
 * licence: MIT license 
 * https://github.com/mydea/scubajs 
 */

!function($){var offlineReadyEvent="offlineready",offlineStatusEvent="offlinestatuschange";$.scuba=function(options){var settings=$.extend({},$.scuba.defaults,options),isOffline=!1,ajaxOnline=$.ajax,LocalDB=function(){var databaseIsReady=!1,db=null,dbName="scuba",findAll=function(table){if(!databaseIsReady)return!1;var trans=db.transaction([table],"readonly"),store=trans.objectStore(table),keyRange=IDBKeyRange.lowerBound(0),request=store.openCursor(keyRange),deferred=new $.Deferred,resultCache=[];return request.onsuccess=function(e){var result=e.target.result;return!!result==!1?(deferred.resolve(resultCache),void(resultCache=null)):(resultCache.push(result.value),void result["continue"]())},request.onerror=function(){deferred.reject("an error occured when trying to load all entries of table "+table)},deferred.promise()},findById=function(table,id){if(!databaseIsReady)return!1;var trans=db.transaction([table],"readonly"),store=trans.objectStore(table),request=store.get(id),deferred=new $.Deferred;return request.onsuccess=function(e){var result=e.target.result;deferred.resolve(result||null)},request.onerror=function(){deferred.reject("an error occured when trying to load the entries of table "+table+" with the id "+id)},deferred.promise()},findByAttributes=function(table,attrs){if(!databaseIsReady)return!1;var deferred=new $.Deferred;return findAll(table).then(function(data){var filteredData=$.grep(data,function(item){for(var i in attrs)if("string"==typeof attrs[i]){if(attrs[i].toLowerCase()!==item[i].toLowerCase())return!1}else if(attrs[i]!==item[i])return!1;return!0});deferred.resolve(filteredData)}),deferred.promise()},findCustom=function(table,func){if(!databaseIsReady)return!1;var deferred=new $.Deferred;return findAll(table).then(function(data){var filteredData=$.grep(data,function(item){return func(item)});deferred.resolve(filteredData)}),deferred.promise()},rowInsert=function(table,data,checkIfExists){var deferred=$.Deferred();if(!databaseIsReady)return!1;if("undefined"==typeof checkIfExists&&(checkIfExists=!1),checkIfExists)findById(table,data.id).then(function(item){if(item)return void deferred.resolve(null);{var trans=db.transaction([table],"readwrite"),store=trans.objectStore(table);store.put(data)}trans.oncomplete=function(){deferred.resolve(data)},trans.onerror=function(){deferred.reject("error")}});else{{var trans=db.transaction([table],"readwrite"),store=trans.objectStore(table);store.put(data)}trans.oncomplete=function(){deferred.resolve(data)},trans.onerror=function(){deferred.reject("error")}}return deferred.promise()},rowUpdate=function(table,id,data){var deferred=$.Deferred();return databaseIsReady?3!==arguments.length?(console.error("rowUpdate() expects 3 parameters: table, id, data"),!1):(findById(table,id).then(function(item){if(!item)return void deferred.resolve(null);{var trans=db.transaction([table],"readwrite"),store=trans.objectStore(table);store.put(data)}trans.oncomplete=function(){deferred.resolve(data)},trans.onerror=function(){deferred.reject("error")}}),deferred.promise()):!1},rowDelete=function(table,id){var deferred=$.Deferred();return databaseIsReady?(findById(table,id).then(function(item){if(!item)return void deferred.resolve(!1);{var trans=db.transaction([table],"readwrite"),store=trans.objectStore(table);store["delete"](id)}trans.oncomplete=function(){deferred.resolve(!0)},trans.onerror=function(){deferred.reject("error")}}),deferred.promise()):!1},_initSchema=function(schema){databaseIsReady=!1;var request=indexedDB.deleteDatabase(dbName);request.onsuccess=function(){_createSchema(schema)},request.onerror=function(){}},cleanUp=function(){indexedDB.deleteDatabase(dbName)},_createSchema=function(schema){var request=indexedDB.open(dbName,(new Date).getTime());request.onupgradeneeded=function(){var i,objectStore,db=this.result;for(i=0;i<schema.length;i++)objectStore=db.createObjectStore(schema[i].table,{keyPath:"id",autoIncrement:!1});objectStore=db.createObjectStore("scuba_queue",{keyPath:"id",autoIncrement:!0})},request.onsuccess=function(){db=this.result,databaseIsReady=!0;var i,j,promises=[];for(i=0;i<schema.length;i++)for(j=0;j<schema[i].data.length;j++)promises.push(rowInsert(schema[i].table,schema[i].data[j]));$.Deferred();$.when.apply($,promises).done(function(){_transferOfflineReadyEvent()})},request.onerror=function(){}},_initOffline=function(){var request=indexedDB.open(dbName);request.onsuccess=function(){db=this.result,db.objectStoreNames.length?(databaseIsReady=!0,_transferOfflineReadyEvent()):(databaseIsReady=!0,_transferOfflineReadyEvent())},request.onerror=function(){}},_transferOfflineReadyEvent=function(){_emitOfflineReadyEvent(databaseIsReady)},init=function(schema){schema?_initSchema(schema):_initOffline()},setNamespace=function(namespace){dbName=namespace};return{findAll:findAll,findById:findById,findByAttributes:findByAttributes,findCustom:findCustom,rowInsert:rowInsert,rowUpdate:rowUpdate,rowDelete:rowDelete,init:init,setNamespace:setNamespace,cleanUp:cleanUp,databaseIsReady:function(){return databaseIsReady}}}();settings.localDBClass&&(LocalDB=settings.localDBClass),settings.namespace&&LocalDB.setNamespace(settings.namespace),"function"!=typeof settings.onofflineready&&(settings.onofflineready=function(){}),settings.noConflict="undefined"!=typeof settings.noConflict?!!settings.noConflict:!1,"function"!=typeof settings.onofflinestatuschange&&(settings.onofflinestatuschange=function(){});var _emitOfflineStatusChangeEvent=function(){$(window).trigger(offlineStatusEvent,[isOffline]),settings.onofflinestatuschange(isOffline)},_emitOfflineReadyEvent=function(){$(window).trigger(offlineReadyEvent,[LocalDB.databaseIsReady()]),settings.onofflineready(isOffline)},_initLocalDB=function(data){if(!data)return LocalDB.init(null),isOffline=!0,_emitOfflineStatusChangeEvent(),!1;var i,schema=[];for(i in data)schema.push({table:i,data:data[i]});return LocalDB.init(schema),!0},_downSync=function(){var routes=settings.downSyncRoutes,openRoutes=routes.length,data={},abort=!1;setTimeout(function(){!abort&&openRoutes>0&&(abort=!0,_initLocalDB(null))},settings.downSyncTimeout),routes&&0!==routes.length||(abort=!0,_initLocalDB(null));for(var i=0;i<routes.length;i++)!function(route){"function"!=typeof route.success&&(route.success=function(data){return data}),ajaxOnline({url:route.url,success:function(response){if(!abort){var responseData=route.success(response);data=_mergeData(data,responseData),openRoutes--,0===openRoutes&&(_initLocalDB(data),console.timeEnd("downsync"))}},error:function(){abort||(console.timeEnd("downsync"),abort=!0,_initLocalDB(null))}})}(routes[i])},_workQueue=function(){},_init=function(){settings.noConflict||($.ajaxOnline=ajaxOnline,$.ajax=ajax),_downSync()},sync=function(){_downSync(),_workQueue()},ajax=function(){if(!LocalDB.databaseIsReady())return ajaxOnline.apply($,arguments);var options={};"string"==typeof arguments[0]?(options.url=arguments[0],"object"==typeof arguments[1]&&$.extend(options,arguments[1])):options=$.extend(options,arguments[0]),options.type="undefined"==typeof options.type||"post"!=options.type&&"put"!=options.type&&"update"!=options.type?"get":options.type.toLowerCase(),"function"!=typeof options.success&&(options.success=function(){}),"function"!=typeof options.error&&(options.error=function(){}),"function"!=typeof options.complete&&(options.complete=function(){});var fittingRoute=_getRoute(options.url,options.type);if(!fittingRoute)return ajaxOnline.apply($,arguments);var actionPromise=null;if("post"===options.type||"put"===options.type||"delete"===options.type){actionPromise=fittingRoute.route.action.apply(LocalDB,[options]);var reducedOptions={};for(var i in options)"function"!=typeof options[i]&&(reducedOptions[i]=options[i]);LocalDB.rowInsert("scuba_queue",reducedOptions)}var getData=function(actionPromise){var deferred=$.Deferred(),getDataFunction=function(){var params=fittingRoute.params.slice(1),data=fittingRoute.route.data.apply(LocalDB,params);data.then(function(data){var response=fittingRoute.route.format?fittingRoute.route.format(data):settings.defaultFormat(data);deferred.resolve(response),options.success(response),options.complete(response)}).fail(function(e){deferred.reject(e),options.error(e),options.complete(e),console.error("error loading data")})};return actionPromise?actionPromise.then(function(){getDataFunction()}):getDataFunction(),deferred},deferred=getData(actionPromise),promise=deferred.promise();return promise.success=deferred.done,promise.error=deferred.fail,promise.complete=deferred.done,promise},cleanUp=function(){return LocalDB.cleanUp(),!0};_init();var _mergeData=function(data1,data2){var model,i,length,lookup;for(model in data2){for(data1[model]||(data1[model]=[]),lookup={},i=0,length=data1[model].length;length>i;i++)lookup[data1[model][i].id]=data1[model][i];for(i=0;i<data2[model].length;i++)"undefined"==typeof lookup[data2[model][i].id]&&data1[model].push(data2[model][i])}return data1},_parseURI=function(uri){var parser=document.createElement("a");parser.href=uri;var path=parser.pathname;0===path.indexOf("/")&&(path=path.slice(1)),"/"===path.substr(path.length-1)&&(path=path.slice(0,path.length-1));var pathSegments=path.split("/");return{hash:parser.hash,searchParams:parser.search,host:parser.host,protocol:parser.protocol,path:path,pathSegments:pathSegments}},_getRoute=function(route,type){for(var i,j,tempParts,regex,matches,routes=settings.routes,routeParts=_parseURI(route),i=0;i<routes.length;i++)if(routes[i].type.toLowerCase()===type.toLowerCase()){for(tempParts=_parseURI(routes[i].route),j=0;j<tempParts.pathSegments.length;j++)"!!"==tempParts.pathSegments[j]&&(tempParts.pathSegments[j]="(\\w+|\\d+)");if(regex="^"+tempParts.pathSegments.join("\\/")+"$",regex=new RegExp(regex,"gi"),matches=regex.exec(routeParts.path))return{route:routes[i],params:matches}}return!1};return{sync:sync,cleanUp:cleanUp,LocalDB:LocalDB,ajax:ajax,isOffline:function(){return!1},isOfflineReady:function(){return!0}}},$.scuba.defaults={retryPeriod:15,downSyncTimeout:1e4,remoteIfOnline:!1,includeDefaultRoutes:!0,localDBClass:null,downSyncRoutes:[],routes:[],namespace:"scuba",noConflict:!0,defaultFormat:function(data){return{meta:{},data:data}}}}(jQuery);